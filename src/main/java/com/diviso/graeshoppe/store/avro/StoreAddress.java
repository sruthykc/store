/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.diviso.graeshoppe.store.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StoreAddress extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2072097718736695958L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StoreAddress\",\"namespace\":\"com.diviso.graeshoppe.store.avro\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"]},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"postCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"houseNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"city\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"street\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"landmark\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<StoreAddress> ENCODER =
      new BinaryMessageEncoder<StoreAddress>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<StoreAddress> DECODER =
      new BinaryMessageDecoder<StoreAddress>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<StoreAddress> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<StoreAddress> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<StoreAddress>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this StoreAddress to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a StoreAddress from a ByteBuffer. */
  public static StoreAddress fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.Long id;
  @Deprecated public java.lang.String status;
  @Deprecated public java.lang.String postCode;
  @Deprecated public java.lang.String houseNumber;
  @Deprecated public java.lang.String city;
  @Deprecated public java.lang.String state;
  @Deprecated public java.lang.String street;
  @Deprecated public java.lang.String landmark;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public StoreAddress() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param status The new value for status
   * @param postCode The new value for postCode
   * @param houseNumber The new value for houseNumber
   * @param city The new value for city
   * @param state The new value for state
   * @param street The new value for street
   * @param landmark The new value for landmark
   */
  public StoreAddress(java.lang.Long id, java.lang.String status, java.lang.String postCode, java.lang.String houseNumber, java.lang.String city, java.lang.String state, java.lang.String street, java.lang.String landmark) {
    this.id = id;
    this.status = status;
    this.postCode = postCode;
    this.houseNumber = houseNumber;
    this.city = city;
    this.state = state;
    this.street = street;
    this.landmark = landmark;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return status;
    case 2: return postCode;
    case 3: return houseNumber;
    case 4: return city;
    case 5: return state;
    case 6: return street;
    case 7: return landmark;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: status = (java.lang.String)value$; break;
    case 2: postCode = (java.lang.String)value$; break;
    case 3: houseNumber = (java.lang.String)value$; break;
    case 4: city = (java.lang.String)value$; break;
    case 5: state = (java.lang.String)value$; break;
    case 6: street = (java.lang.String)value$; break;
    case 7: landmark = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'postCode' field.
   * @return The value of the 'postCode' field.
   */
  public java.lang.String getPostCode() {
    return postCode;
  }

  /**
   * Sets the value of the 'postCode' field.
   * @param value the value to set.
   */
  public void setPostCode(java.lang.String value) {
    this.postCode = value;
  }

  /**
   * Gets the value of the 'houseNumber' field.
   * @return The value of the 'houseNumber' field.
   */
  public java.lang.String getHouseNumber() {
    return houseNumber;
  }

  /**
   * Sets the value of the 'houseNumber' field.
   * @param value the value to set.
   */
  public void setHouseNumber(java.lang.String value) {
    this.houseNumber = value;
  }

  /**
   * Gets the value of the 'city' field.
   * @return The value of the 'city' field.
   */
  public java.lang.String getCity() {
    return city;
  }

  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.String value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'state' field.
   * @return The value of the 'state' field.
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(java.lang.String value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'street' field.
   * @return The value of the 'street' field.
   */
  public java.lang.String getStreet() {
    return street;
  }

  /**
   * Sets the value of the 'street' field.
   * @param value the value to set.
   */
  public void setStreet(java.lang.String value) {
    this.street = value;
  }

  /**
   * Gets the value of the 'landmark' field.
   * @return The value of the 'landmark' field.
   */
  public java.lang.String getLandmark() {
    return landmark;
  }

  /**
   * Sets the value of the 'landmark' field.
   * @param value the value to set.
   */
  public void setLandmark(java.lang.String value) {
    this.landmark = value;
  }

  /**
   * Creates a new StoreAddress RecordBuilder.
   * @return A new StoreAddress RecordBuilder
   */
  public static com.diviso.graeshoppe.store.avro.StoreAddress.Builder newBuilder() {
    return new com.diviso.graeshoppe.store.avro.StoreAddress.Builder();
  }

  /**
   * Creates a new StoreAddress RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new StoreAddress RecordBuilder
   */
  public static com.diviso.graeshoppe.store.avro.StoreAddress.Builder newBuilder(com.diviso.graeshoppe.store.avro.StoreAddress.Builder other) {
    return new com.diviso.graeshoppe.store.avro.StoreAddress.Builder(other);
  }

  /**
   * Creates a new StoreAddress RecordBuilder by copying an existing StoreAddress instance.
   * @param other The existing instance to copy.
   * @return A new StoreAddress RecordBuilder
   */
  public static com.diviso.graeshoppe.store.avro.StoreAddress.Builder newBuilder(com.diviso.graeshoppe.store.avro.StoreAddress other) {
    return new com.diviso.graeshoppe.store.avro.StoreAddress.Builder(other);
  }

  /**
   * RecordBuilder for StoreAddress instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StoreAddress>
    implements org.apache.avro.data.RecordBuilder<StoreAddress> {

    private java.lang.Long id;
    private java.lang.String status;
    private java.lang.String postCode;
    private java.lang.String houseNumber;
    private java.lang.String city;
    private java.lang.String state;
    private java.lang.String street;
    private java.lang.String landmark;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.diviso.graeshoppe.store.avro.StoreAddress.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.status)) {
        this.status = data().deepCopy(fields()[1].schema(), other.status);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.postCode)) {
        this.postCode = data().deepCopy(fields()[2].schema(), other.postCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.houseNumber)) {
        this.houseNumber = data().deepCopy(fields()[3].schema(), other.houseNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.city)) {
        this.city = data().deepCopy(fields()[4].schema(), other.city);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.state)) {
        this.state = data().deepCopy(fields()[5].schema(), other.state);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.street)) {
        this.street = data().deepCopy(fields()[6].schema(), other.street);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.landmark)) {
        this.landmark = data().deepCopy(fields()[7].schema(), other.landmark);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing StoreAddress instance
     * @param other The existing instance to copy.
     */
    private Builder(com.diviso.graeshoppe.store.avro.StoreAddress other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.status)) {
        this.status = data().deepCopy(fields()[1].schema(), other.status);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.postCode)) {
        this.postCode = data().deepCopy(fields()[2].schema(), other.postCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.houseNumber)) {
        this.houseNumber = data().deepCopy(fields()[3].schema(), other.houseNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.city)) {
        this.city = data().deepCopy(fields()[4].schema(), other.city);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.state)) {
        this.state = data().deepCopy(fields()[5].schema(), other.state);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.street)) {
        this.street = data().deepCopy(fields()[6].schema(), other.street);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.landmark)) {
        this.landmark = data().deepCopy(fields()[7].schema(), other.landmark);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder setStatus(java.lang.String value) {
      validate(fields()[1], value);
      this.status = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder clearStatus() {
      status = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'postCode' field.
      * @return The value.
      */
    public java.lang.String getPostCode() {
      return postCode;
    }

    /**
      * Sets the value of the 'postCode' field.
      * @param value The value of 'postCode'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder setPostCode(java.lang.String value) {
      validate(fields()[2], value);
      this.postCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'postCode' field has been set.
      * @return True if the 'postCode' field has been set, false otherwise.
      */
    public boolean hasPostCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'postCode' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder clearPostCode() {
      postCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'houseNumber' field.
      * @return The value.
      */
    public java.lang.String getHouseNumber() {
      return houseNumber;
    }

    /**
      * Sets the value of the 'houseNumber' field.
      * @param value The value of 'houseNumber'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder setHouseNumber(java.lang.String value) {
      validate(fields()[3], value);
      this.houseNumber = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'houseNumber' field has been set.
      * @return True if the 'houseNumber' field has been set, false otherwise.
      */
    public boolean hasHouseNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'houseNumber' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder clearHouseNumber() {
      houseNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'city' field.
      * @return The value.
      */
    public java.lang.String getCity() {
      return city;
    }

    /**
      * Sets the value of the 'city' field.
      * @param value The value of 'city'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder setCity(java.lang.String value) {
      validate(fields()[4], value);
      this.city = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'city' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder clearCity() {
      city = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'state' field.
      * @return The value.
      */
    public java.lang.String getState() {
      return state;
    }

    /**
      * Sets the value of the 'state' field.
      * @param value The value of 'state'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder setState(java.lang.String value) {
      validate(fields()[5], value);
      this.state = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'state' field has been set.
      * @return True if the 'state' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'state' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder clearState() {
      state = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'street' field.
      * @return The value.
      */
    public java.lang.String getStreet() {
      return street;
    }

    /**
      * Sets the value of the 'street' field.
      * @param value The value of 'street'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder setStreet(java.lang.String value) {
      validate(fields()[6], value);
      this.street = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'street' field has been set.
      * @return True if the 'street' field has been set, false otherwise.
      */
    public boolean hasStreet() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'street' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder clearStreet() {
      street = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'landmark' field.
      * @return The value.
      */
    public java.lang.String getLandmark() {
      return landmark;
    }

    /**
      * Sets the value of the 'landmark' field.
      * @param value The value of 'landmark'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder setLandmark(java.lang.String value) {
      validate(fields()[7], value);
      this.landmark = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'landmark' field has been set.
      * @return True if the 'landmark' field has been set, false otherwise.
      */
    public boolean hasLandmark() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'landmark' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.StoreAddress.Builder clearLandmark() {
      landmark = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public StoreAddress build() {
      try {
        StoreAddress record = new StoreAddress();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.status = fieldSetFlags()[1] ? this.status : (java.lang.String) defaultValue(fields()[1]);
        record.postCode = fieldSetFlags()[2] ? this.postCode : (java.lang.String) defaultValue(fields()[2]);
        record.houseNumber = fieldSetFlags()[3] ? this.houseNumber : (java.lang.String) defaultValue(fields()[3]);
        record.city = fieldSetFlags()[4] ? this.city : (java.lang.String) defaultValue(fields()[4]);
        record.state = fieldSetFlags()[5] ? this.state : (java.lang.String) defaultValue(fields()[5]);
        record.street = fieldSetFlags()[6] ? this.street : (java.lang.String) defaultValue(fields()[6]);
        record.landmark = fieldSetFlags()[7] ? this.landmark : (java.lang.String) defaultValue(fields()[7]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<StoreAddress>
    WRITER$ = (org.apache.avro.io.DatumWriter<StoreAddress>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<StoreAddress>
    READER$ = (org.apache.avro.io.DatumReader<StoreAddress>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
