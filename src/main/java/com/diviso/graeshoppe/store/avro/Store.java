/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.diviso.graeshoppe.store.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Store extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5291417037317838728L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Store\",\"namespace\":\"com.diviso.graeshoppe.store.avro\",\"fields\":[{\"name\":\"storeCode\",\"type\":[\"null\",\"long\"]},{\"name\":\"idpCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"storeUniqueId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"image\",\"type\":[\"null\",\"bytes\"],\"default\":\"Ã¿\"},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"imageLink\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"totalRating\",\"type\":[\"null\",\"double\"],\"default\":0.0},{\"name\":\"latLon\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"locationName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"cotactNumber\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"openingTime\",\"type\":\"long\",\"logicalType\":\"date\"},{\"name\":\"zoneId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closingTime\",\"type\":\"long\",\"logicalType\":\"date\"},{\"name\":\"info\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"minAmount\",\"type\":[\"null\",\"double\"],\"default\":0.0},{\"name\":\"maxDeliveryTime\",\"type\":\"long\",\"logicalType\":\"date\"},{\"name\":\"propreitorId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"storeAddressId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"storeSettingsId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"preOrderSettingsId\",\"type\":[\"null\",\"long\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Store> ENCODER =
      new BinaryMessageEncoder<Store>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Store> DECODER =
      new BinaryMessageDecoder<Store>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Store> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Store> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Store>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Store to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Store from a ByteBuffer. */
  public static Store fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.Long storeCode;
  @Deprecated public java.lang.String idpCode;
  @Deprecated public java.lang.String storeUniqueId;
  @Deprecated public java.lang.String status;
  @Deprecated public java.nio.ByteBuffer image;
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.String imageLink;
  @Deprecated public java.lang.Double totalRating;
  @Deprecated public java.lang.String latLon;
  @Deprecated public java.lang.String locationName;
  @Deprecated public java.lang.Long cotactNumber;
  @Deprecated public long openingTime;
  @Deprecated public java.lang.String zoneId;
  @Deprecated public java.lang.String email;
  @Deprecated public long closingTime;
  @Deprecated public java.lang.String info;
  @Deprecated public java.lang.Double minAmount;
  @Deprecated public long maxDeliveryTime;
  @Deprecated public java.lang.Long propreitorId;
  @Deprecated public java.lang.Long storeAddressId;
  @Deprecated public java.lang.Long storeSettingsId;
  @Deprecated public java.lang.Long preOrderSettingsId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Store() {}

  /**
   * All-args constructor.
   * @param storeCode The new value for storeCode
   * @param idpCode The new value for idpCode
   * @param storeUniqueId The new value for storeUniqueId
   * @param status The new value for status
   * @param image The new value for image
   * @param name The new value for name
   * @param imageLink The new value for imageLink
   * @param totalRating The new value for totalRating
   * @param latLon The new value for latLon
   * @param locationName The new value for locationName
   * @param cotactNumber The new value for cotactNumber
   * @param openingTime The new value for openingTime
   * @param zoneId The new value for zoneId
   * @param email The new value for email
   * @param closingTime The new value for closingTime
   * @param info The new value for info
   * @param minAmount The new value for minAmount
   * @param maxDeliveryTime The new value for maxDeliveryTime
   * @param propreitorId The new value for propreitorId
   * @param storeAddressId The new value for storeAddressId
   * @param storeSettingsId The new value for storeSettingsId
   * @param preOrderSettingsId The new value for preOrderSettingsId
   */
  public Store(java.lang.Long storeCode, java.lang.String idpCode, java.lang.String storeUniqueId, java.lang.String status, java.nio.ByteBuffer image, java.lang.String name, java.lang.String imageLink, java.lang.Double totalRating, java.lang.String latLon, java.lang.String locationName, java.lang.Long cotactNumber, java.lang.Long openingTime, java.lang.String zoneId, java.lang.String email, java.lang.Long closingTime, java.lang.String info, java.lang.Double minAmount, java.lang.Long maxDeliveryTime, java.lang.Long propreitorId, java.lang.Long storeAddressId, java.lang.Long storeSettingsId, java.lang.Long preOrderSettingsId) {
    this.storeCode = storeCode;
    this.idpCode = idpCode;
    this.storeUniqueId = storeUniqueId;
    this.status = status;
    this.image = image;
    this.name = name;
    this.imageLink = imageLink;
    this.totalRating = totalRating;
    this.latLon = latLon;
    this.locationName = locationName;
    this.cotactNumber = cotactNumber;
    this.openingTime = openingTime;
    this.zoneId = zoneId;
    this.email = email;
    this.closingTime = closingTime;
    this.info = info;
    this.minAmount = minAmount;
    this.maxDeliveryTime = maxDeliveryTime;
    this.propreitorId = propreitorId;
    this.storeAddressId = storeAddressId;
    this.storeSettingsId = storeSettingsId;
    this.preOrderSettingsId = preOrderSettingsId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return storeCode;
    case 1: return idpCode;
    case 2: return storeUniqueId;
    case 3: return status;
    case 4: return image;
    case 5: return name;
    case 6: return imageLink;
    case 7: return totalRating;
    case 8: return latLon;
    case 9: return locationName;
    case 10: return cotactNumber;
    case 11: return openingTime;
    case 12: return zoneId;
    case 13: return email;
    case 14: return closingTime;
    case 15: return info;
    case 16: return minAmount;
    case 17: return maxDeliveryTime;
    case 18: return propreitorId;
    case 19: return storeAddressId;
    case 20: return storeSettingsId;
    case 21: return preOrderSettingsId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: storeCode = (java.lang.Long)value$; break;
    case 1: idpCode = (java.lang.String)value$; break;
    case 2: storeUniqueId = (java.lang.String)value$; break;
    case 3: status = (java.lang.String)value$; break;
    case 4: image = (java.nio.ByteBuffer)value$; break;
    case 5: name = (java.lang.String)value$; break;
    case 6: imageLink = (java.lang.String)value$; break;
    case 7: totalRating = (java.lang.Double)value$; break;
    case 8: latLon = (java.lang.String)value$; break;
    case 9: locationName = (java.lang.String)value$; break;
    case 10: cotactNumber = (java.lang.Long)value$; break;
    case 11: openingTime = (java.lang.Long)value$; break;
    case 12: zoneId = (java.lang.String)value$; break;
    case 13: email = (java.lang.String)value$; break;
    case 14: closingTime = (java.lang.Long)value$; break;
    case 15: info = (java.lang.String)value$; break;
    case 16: minAmount = (java.lang.Double)value$; break;
    case 17: maxDeliveryTime = (java.lang.Long)value$; break;
    case 18: propreitorId = (java.lang.Long)value$; break;
    case 19: storeAddressId = (java.lang.Long)value$; break;
    case 20: storeSettingsId = (java.lang.Long)value$; break;
    case 21: preOrderSettingsId = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'storeCode' field.
   * @return The value of the 'storeCode' field.
   */
  public java.lang.Long getStoreCode() {
    return storeCode;
  }

  /**
   * Sets the value of the 'storeCode' field.
   * @param value the value to set.
   */
  public void setStoreCode(java.lang.Long value) {
    this.storeCode = value;
  }

  /**
   * Gets the value of the 'idpCode' field.
   * @return The value of the 'idpCode' field.
   */
  public java.lang.String getIdpCode() {
    return idpCode;
  }

  /**
   * Sets the value of the 'idpCode' field.
   * @param value the value to set.
   */
  public void setIdpCode(java.lang.String value) {
    this.idpCode = value;
  }

  /**
   * Gets the value of the 'storeUniqueId' field.
   * @return The value of the 'storeUniqueId' field.
   */
  public java.lang.String getStoreUniqueId() {
    return storeUniqueId;
  }

  /**
   * Sets the value of the 'storeUniqueId' field.
   * @param value the value to set.
   */
  public void setStoreUniqueId(java.lang.String value) {
    this.storeUniqueId = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'image' field.
   * @return The value of the 'image' field.
   */
  public java.nio.ByteBuffer getImage() {
    return image;
  }

  /**
   * Sets the value of the 'image' field.
   * @param value the value to set.
   */
  public void setImage(java.nio.ByteBuffer value) {
    this.image = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'imageLink' field.
   * @return The value of the 'imageLink' field.
   */
  public java.lang.String getImageLink() {
    return imageLink;
  }

  /**
   * Sets the value of the 'imageLink' field.
   * @param value the value to set.
   */
  public void setImageLink(java.lang.String value) {
    this.imageLink = value;
  }

  /**
   * Gets the value of the 'totalRating' field.
   * @return The value of the 'totalRating' field.
   */
  public java.lang.Double getTotalRating() {
    return totalRating;
  }

  /**
   * Sets the value of the 'totalRating' field.
   * @param value the value to set.
   */
  public void setTotalRating(java.lang.Double value) {
    this.totalRating = value;
  }

  /**
   * Gets the value of the 'latLon' field.
   * @return The value of the 'latLon' field.
   */
  public java.lang.String getLatLon() {
    return latLon;
  }

  /**
   * Sets the value of the 'latLon' field.
   * @param value the value to set.
   */
  public void setLatLon(java.lang.String value) {
    this.latLon = value;
  }

  /**
   * Gets the value of the 'locationName' field.
   * @return The value of the 'locationName' field.
   */
  public java.lang.String getLocationName() {
    return locationName;
  }

  /**
   * Sets the value of the 'locationName' field.
   * @param value the value to set.
   */
  public void setLocationName(java.lang.String value) {
    this.locationName = value;
  }

  /**
   * Gets the value of the 'cotactNumber' field.
   * @return The value of the 'cotactNumber' field.
   */
  public java.lang.Long getCotactNumber() {
    return cotactNumber;
  }

  /**
   * Sets the value of the 'cotactNumber' field.
   * @param value the value to set.
   */
  public void setCotactNumber(java.lang.Long value) {
    this.cotactNumber = value;
  }

  /**
   * Gets the value of the 'openingTime' field.
   * @return The value of the 'openingTime' field.
   */
  public java.lang.Long getOpeningTime() {
    return openingTime;
  }

  /**
   * Sets the value of the 'openingTime' field.
   * @param value the value to set.
   */
  public void setOpeningTime(java.lang.Long value) {
    this.openingTime = value;
  }

  /**
   * Gets the value of the 'zoneId' field.
   * @return The value of the 'zoneId' field.
   */
  public java.lang.String getZoneId() {
    return zoneId;
  }

  /**
   * Sets the value of the 'zoneId' field.
   * @param value the value to set.
   */
  public void setZoneId(java.lang.String value) {
    this.zoneId = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'closingTime' field.
   * @return The value of the 'closingTime' field.
   */
  public java.lang.Long getClosingTime() {
    return closingTime;
  }

  /**
   * Sets the value of the 'closingTime' field.
   * @param value the value to set.
   */
  public void setClosingTime(java.lang.Long value) {
    this.closingTime = value;
  }

  /**
   * Gets the value of the 'info' field.
   * @return The value of the 'info' field.
   */
  public java.lang.String getInfo() {
    return info;
  }

  /**
   * Sets the value of the 'info' field.
   * @param value the value to set.
   */
  public void setInfo(java.lang.String value) {
    this.info = value;
  }

  /**
   * Gets the value of the 'minAmount' field.
   * @return The value of the 'minAmount' field.
   */
  public java.lang.Double getMinAmount() {
    return minAmount;
  }

  /**
   * Sets the value of the 'minAmount' field.
   * @param value the value to set.
   */
  public void setMinAmount(java.lang.Double value) {
    this.minAmount = value;
  }

  /**
   * Gets the value of the 'maxDeliveryTime' field.
   * @return The value of the 'maxDeliveryTime' field.
   */
  public java.lang.Long getMaxDeliveryTime() {
    return maxDeliveryTime;
  }

  /**
   * Sets the value of the 'maxDeliveryTime' field.
   * @param value the value to set.
   */
  public void setMaxDeliveryTime(java.lang.Long value) {
    this.maxDeliveryTime = value;
  }

  /**
   * Gets the value of the 'propreitorId' field.
   * @return The value of the 'propreitorId' field.
   */
  public java.lang.Long getPropreitorId() {
    return propreitorId;
  }

  /**
   * Sets the value of the 'propreitorId' field.
   * @param value the value to set.
   */
  public void setPropreitorId(java.lang.Long value) {
    this.propreitorId = value;
  }

  /**
   * Gets the value of the 'storeAddressId' field.
   * @return The value of the 'storeAddressId' field.
   */
  public java.lang.Long getStoreAddressId() {
    return storeAddressId;
  }

  /**
   * Sets the value of the 'storeAddressId' field.
   * @param value the value to set.
   */
  public void setStoreAddressId(java.lang.Long value) {
    this.storeAddressId = value;
  }

  /**
   * Gets the value of the 'storeSettingsId' field.
   * @return The value of the 'storeSettingsId' field.
   */
  public java.lang.Long getStoreSettingsId() {
    return storeSettingsId;
  }

  /**
   * Sets the value of the 'storeSettingsId' field.
   * @param value the value to set.
   */
  public void setStoreSettingsId(java.lang.Long value) {
    this.storeSettingsId = value;
  }

  /**
   * Gets the value of the 'preOrderSettingsId' field.
   * @return The value of the 'preOrderSettingsId' field.
   */
  public java.lang.Long getPreOrderSettingsId() {
    return preOrderSettingsId;
  }

  /**
   * Sets the value of the 'preOrderSettingsId' field.
   * @param value the value to set.
   */
  public void setPreOrderSettingsId(java.lang.Long value) {
    this.preOrderSettingsId = value;
  }

  /**
   * Creates a new Store RecordBuilder.
   * @return A new Store RecordBuilder
   */
  public static com.diviso.graeshoppe.store.avro.Store.Builder newBuilder() {
    return new com.diviso.graeshoppe.store.avro.Store.Builder();
  }

  /**
   * Creates a new Store RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Store RecordBuilder
   */
  public static com.diviso.graeshoppe.store.avro.Store.Builder newBuilder(com.diviso.graeshoppe.store.avro.Store.Builder other) {
    return new com.diviso.graeshoppe.store.avro.Store.Builder(other);
  }

  /**
   * Creates a new Store RecordBuilder by copying an existing Store instance.
   * @param other The existing instance to copy.
   * @return A new Store RecordBuilder
   */
  public static com.diviso.graeshoppe.store.avro.Store.Builder newBuilder(com.diviso.graeshoppe.store.avro.Store other) {
    return new com.diviso.graeshoppe.store.avro.Store.Builder(other);
  }

  /**
   * RecordBuilder for Store instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Store>
    implements org.apache.avro.data.RecordBuilder<Store> {

    private java.lang.Long storeCode;
    private java.lang.String idpCode;
    private java.lang.String storeUniqueId;
    private java.lang.String status;
    private java.nio.ByteBuffer image;
    private java.lang.String name;
    private java.lang.String imageLink;
    private java.lang.Double totalRating;
    private java.lang.String latLon;
    private java.lang.String locationName;
    private java.lang.Long cotactNumber;
    private long openingTime;
    private java.lang.String zoneId;
    private java.lang.String email;
    private long closingTime;
    private java.lang.String info;
    private java.lang.Double minAmount;
    private long maxDeliveryTime;
    private java.lang.Long propreitorId;
    private java.lang.Long storeAddressId;
    private java.lang.Long storeSettingsId;
    private java.lang.Long preOrderSettingsId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.diviso.graeshoppe.store.avro.Store.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.storeCode)) {
        this.storeCode = data().deepCopy(fields()[0].schema(), other.storeCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.idpCode)) {
        this.idpCode = data().deepCopy(fields()[1].schema(), other.idpCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.storeUniqueId)) {
        this.storeUniqueId = data().deepCopy(fields()[2].schema(), other.storeUniqueId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.image)) {
        this.image = data().deepCopy(fields()[4].schema(), other.image);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.name)) {
        this.name = data().deepCopy(fields()[5].schema(), other.name);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.imageLink)) {
        this.imageLink = data().deepCopy(fields()[6].schema(), other.imageLink);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.totalRating)) {
        this.totalRating = data().deepCopy(fields()[7].schema(), other.totalRating);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.latLon)) {
        this.latLon = data().deepCopy(fields()[8].schema(), other.latLon);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.locationName)) {
        this.locationName = data().deepCopy(fields()[9].schema(), other.locationName);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.cotactNumber)) {
        this.cotactNumber = data().deepCopy(fields()[10].schema(), other.cotactNumber);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.openingTime)) {
        this.openingTime = data().deepCopy(fields()[11].schema(), other.openingTime);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.zoneId)) {
        this.zoneId = data().deepCopy(fields()[12].schema(), other.zoneId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.email)) {
        this.email = data().deepCopy(fields()[13].schema(), other.email);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.closingTime)) {
        this.closingTime = data().deepCopy(fields()[14].schema(), other.closingTime);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.info)) {
        this.info = data().deepCopy(fields()[15].schema(), other.info);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.minAmount)) {
        this.minAmount = data().deepCopy(fields()[16].schema(), other.minAmount);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.maxDeliveryTime)) {
        this.maxDeliveryTime = data().deepCopy(fields()[17].schema(), other.maxDeliveryTime);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.propreitorId)) {
        this.propreitorId = data().deepCopy(fields()[18].schema(), other.propreitorId);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.storeAddressId)) {
        this.storeAddressId = data().deepCopy(fields()[19].schema(), other.storeAddressId);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.storeSettingsId)) {
        this.storeSettingsId = data().deepCopy(fields()[20].schema(), other.storeSettingsId);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.preOrderSettingsId)) {
        this.preOrderSettingsId = data().deepCopy(fields()[21].schema(), other.preOrderSettingsId);
        fieldSetFlags()[21] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Store instance
     * @param other The existing instance to copy.
     */
    private Builder(com.diviso.graeshoppe.store.avro.Store other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.storeCode)) {
        this.storeCode = data().deepCopy(fields()[0].schema(), other.storeCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.idpCode)) {
        this.idpCode = data().deepCopy(fields()[1].schema(), other.idpCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.storeUniqueId)) {
        this.storeUniqueId = data().deepCopy(fields()[2].schema(), other.storeUniqueId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.image)) {
        this.image = data().deepCopy(fields()[4].schema(), other.image);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.name)) {
        this.name = data().deepCopy(fields()[5].schema(), other.name);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.imageLink)) {
        this.imageLink = data().deepCopy(fields()[6].schema(), other.imageLink);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.totalRating)) {
        this.totalRating = data().deepCopy(fields()[7].schema(), other.totalRating);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.latLon)) {
        this.latLon = data().deepCopy(fields()[8].schema(), other.latLon);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.locationName)) {
        this.locationName = data().deepCopy(fields()[9].schema(), other.locationName);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.cotactNumber)) {
        this.cotactNumber = data().deepCopy(fields()[10].schema(), other.cotactNumber);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.openingTime)) {
        this.openingTime = data().deepCopy(fields()[11].schema(), other.openingTime);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.zoneId)) {
        this.zoneId = data().deepCopy(fields()[12].schema(), other.zoneId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.email)) {
        this.email = data().deepCopy(fields()[13].schema(), other.email);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.closingTime)) {
        this.closingTime = data().deepCopy(fields()[14].schema(), other.closingTime);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.info)) {
        this.info = data().deepCopy(fields()[15].schema(), other.info);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.minAmount)) {
        this.minAmount = data().deepCopy(fields()[16].schema(), other.minAmount);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.maxDeliveryTime)) {
        this.maxDeliveryTime = data().deepCopy(fields()[17].schema(), other.maxDeliveryTime);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.propreitorId)) {
        this.propreitorId = data().deepCopy(fields()[18].schema(), other.propreitorId);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.storeAddressId)) {
        this.storeAddressId = data().deepCopy(fields()[19].schema(), other.storeAddressId);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.storeSettingsId)) {
        this.storeSettingsId = data().deepCopy(fields()[20].schema(), other.storeSettingsId);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.preOrderSettingsId)) {
        this.preOrderSettingsId = data().deepCopy(fields()[21].schema(), other.preOrderSettingsId);
        fieldSetFlags()[21] = true;
      }
    }

    /**
      * Gets the value of the 'storeCode' field.
      * @return The value.
      */
    public java.lang.Long getStoreCode() {
      return storeCode;
    }

    /**
      * Sets the value of the 'storeCode' field.
      * @param value The value of 'storeCode'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setStoreCode(java.lang.Long value) {
      validate(fields()[0], value);
      this.storeCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'storeCode' field has been set.
      * @return True if the 'storeCode' field has been set, false otherwise.
      */
    public boolean hasStoreCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'storeCode' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearStoreCode() {
      storeCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'idpCode' field.
      * @return The value.
      */
    public java.lang.String getIdpCode() {
      return idpCode;
    }

    /**
      * Sets the value of the 'idpCode' field.
      * @param value The value of 'idpCode'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setIdpCode(java.lang.String value) {
      validate(fields()[1], value);
      this.idpCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'idpCode' field has been set.
      * @return True if the 'idpCode' field has been set, false otherwise.
      */
    public boolean hasIdpCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'idpCode' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearIdpCode() {
      idpCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'storeUniqueId' field.
      * @return The value.
      */
    public java.lang.String getStoreUniqueId() {
      return storeUniqueId;
    }

    /**
      * Sets the value of the 'storeUniqueId' field.
      * @param value The value of 'storeUniqueId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setStoreUniqueId(java.lang.String value) {
      validate(fields()[2], value);
      this.storeUniqueId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'storeUniqueId' field has been set.
      * @return True if the 'storeUniqueId' field has been set, false otherwise.
      */
    public boolean hasStoreUniqueId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'storeUniqueId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearStoreUniqueId() {
      storeUniqueId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setStatus(java.lang.String value) {
      validate(fields()[3], value);
      this.status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearStatus() {
      status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'image' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getImage() {
      return image;
    }

    /**
      * Sets the value of the 'image' field.
      * @param value The value of 'image'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setImage(java.nio.ByteBuffer value) {
      validate(fields()[4], value);
      this.image = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'image' field has been set.
      * @return True if the 'image' field has been set, false otherwise.
      */
    public boolean hasImage() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'image' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearImage() {
      image = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setName(java.lang.String value) {
      validate(fields()[5], value);
      this.name = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearName() {
      name = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'imageLink' field.
      * @return The value.
      */
    public java.lang.String getImageLink() {
      return imageLink;
    }

    /**
      * Sets the value of the 'imageLink' field.
      * @param value The value of 'imageLink'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setImageLink(java.lang.String value) {
      validate(fields()[6], value);
      this.imageLink = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'imageLink' field has been set.
      * @return True if the 'imageLink' field has been set, false otherwise.
      */
    public boolean hasImageLink() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'imageLink' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearImageLink() {
      imageLink = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalRating' field.
      * @return The value.
      */
    public java.lang.Double getTotalRating() {
      return totalRating;
    }

    /**
      * Sets the value of the 'totalRating' field.
      * @param value The value of 'totalRating'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setTotalRating(java.lang.Double value) {
      validate(fields()[7], value);
      this.totalRating = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'totalRating' field has been set.
      * @return True if the 'totalRating' field has been set, false otherwise.
      */
    public boolean hasTotalRating() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'totalRating' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearTotalRating() {
      totalRating = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'latLon' field.
      * @return The value.
      */
    public java.lang.String getLatLon() {
      return latLon;
    }

    /**
      * Sets the value of the 'latLon' field.
      * @param value The value of 'latLon'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setLatLon(java.lang.String value) {
      validate(fields()[8], value);
      this.latLon = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'latLon' field has been set.
      * @return True if the 'latLon' field has been set, false otherwise.
      */
    public boolean hasLatLon() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'latLon' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearLatLon() {
      latLon = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'locationName' field.
      * @return The value.
      */
    public java.lang.String getLocationName() {
      return locationName;
    }

    /**
      * Sets the value of the 'locationName' field.
      * @param value The value of 'locationName'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setLocationName(java.lang.String value) {
      validate(fields()[9], value);
      this.locationName = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'locationName' field has been set.
      * @return True if the 'locationName' field has been set, false otherwise.
      */
    public boolean hasLocationName() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'locationName' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearLocationName() {
      locationName = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'cotactNumber' field.
      * @return The value.
      */
    public java.lang.Long getCotactNumber() {
      return cotactNumber;
    }

    /**
      * Sets the value of the 'cotactNumber' field.
      * @param value The value of 'cotactNumber'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setCotactNumber(java.lang.Long value) {
      validate(fields()[10], value);
      this.cotactNumber = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'cotactNumber' field has been set.
      * @return True if the 'cotactNumber' field has been set, false otherwise.
      */
    public boolean hasCotactNumber() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'cotactNumber' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearCotactNumber() {
      cotactNumber = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'openingTime' field.
      * @return The value.
      */
    public java.lang.Long getOpeningTime() {
      return openingTime;
    }

    /**
      * Sets the value of the 'openingTime' field.
      * @param value The value of 'openingTime'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setOpeningTime(long value) {
      validate(fields()[11], value);
      this.openingTime = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'openingTime' field has been set.
      * @return True if the 'openingTime' field has been set, false otherwise.
      */
    public boolean hasOpeningTime() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'openingTime' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearOpeningTime() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'zoneId' field.
      * @return The value.
      */
    public java.lang.String getZoneId() {
      return zoneId;
    }

    /**
      * Sets the value of the 'zoneId' field.
      * @param value The value of 'zoneId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setZoneId(java.lang.String value) {
      validate(fields()[12], value);
      this.zoneId = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'zoneId' field has been set.
      * @return True if the 'zoneId' field has been set, false otherwise.
      */
    public boolean hasZoneId() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'zoneId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearZoneId() {
      zoneId = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.String getEmail() {
      return email;
    }

    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setEmail(java.lang.String value) {
      validate(fields()[13], value);
      this.email = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearEmail() {
      email = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'closingTime' field.
      * @return The value.
      */
    public java.lang.Long getClosingTime() {
      return closingTime;
    }

    /**
      * Sets the value of the 'closingTime' field.
      * @param value The value of 'closingTime'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setClosingTime(long value) {
      validate(fields()[14], value);
      this.closingTime = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'closingTime' field has been set.
      * @return True if the 'closingTime' field has been set, false otherwise.
      */
    public boolean hasClosingTime() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'closingTime' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearClosingTime() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'info' field.
      * @return The value.
      */
    public java.lang.String getInfo() {
      return info;
    }

    /**
      * Sets the value of the 'info' field.
      * @param value The value of 'info'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setInfo(java.lang.String value) {
      validate(fields()[15], value);
      this.info = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'info' field has been set.
      * @return True if the 'info' field has been set, false otherwise.
      */
    public boolean hasInfo() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'info' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearInfo() {
      info = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'minAmount' field.
      * @return The value.
      */
    public java.lang.Double getMinAmount() {
      return minAmount;
    }

    /**
      * Sets the value of the 'minAmount' field.
      * @param value The value of 'minAmount'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setMinAmount(java.lang.Double value) {
      validate(fields()[16], value);
      this.minAmount = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'minAmount' field has been set.
      * @return True if the 'minAmount' field has been set, false otherwise.
      */
    public boolean hasMinAmount() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'minAmount' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearMinAmount() {
      minAmount = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxDeliveryTime' field.
      * @return The value.
      */
    public java.lang.Long getMaxDeliveryTime() {
      return maxDeliveryTime;
    }

    /**
      * Sets the value of the 'maxDeliveryTime' field.
      * @param value The value of 'maxDeliveryTime'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setMaxDeliveryTime(long value) {
      validate(fields()[17], value);
      this.maxDeliveryTime = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'maxDeliveryTime' field has been set.
      * @return True if the 'maxDeliveryTime' field has been set, false otherwise.
      */
    public boolean hasMaxDeliveryTime() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'maxDeliveryTime' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearMaxDeliveryTime() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'propreitorId' field.
      * @return The value.
      */
    public java.lang.Long getPropreitorId() {
      return propreitorId;
    }

    /**
      * Sets the value of the 'propreitorId' field.
      * @param value The value of 'propreitorId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setPropreitorId(java.lang.Long value) {
      validate(fields()[18], value);
      this.propreitorId = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'propreitorId' field has been set.
      * @return True if the 'propreitorId' field has been set, false otherwise.
      */
    public boolean hasPropreitorId() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'propreitorId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearPropreitorId() {
      propreitorId = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'storeAddressId' field.
      * @return The value.
      */
    public java.lang.Long getStoreAddressId() {
      return storeAddressId;
    }

    /**
      * Sets the value of the 'storeAddressId' field.
      * @param value The value of 'storeAddressId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setStoreAddressId(java.lang.Long value) {
      validate(fields()[19], value);
      this.storeAddressId = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'storeAddressId' field has been set.
      * @return True if the 'storeAddressId' field has been set, false otherwise.
      */
    public boolean hasStoreAddressId() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'storeAddressId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearStoreAddressId() {
      storeAddressId = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'storeSettingsId' field.
      * @return The value.
      */
    public java.lang.Long getStoreSettingsId() {
      return storeSettingsId;
    }

    /**
      * Sets the value of the 'storeSettingsId' field.
      * @param value The value of 'storeSettingsId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setStoreSettingsId(java.lang.Long value) {
      validate(fields()[20], value);
      this.storeSettingsId = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'storeSettingsId' field has been set.
      * @return True if the 'storeSettingsId' field has been set, false otherwise.
      */
    public boolean hasStoreSettingsId() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'storeSettingsId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearStoreSettingsId() {
      storeSettingsId = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'preOrderSettingsId' field.
      * @return The value.
      */
    public java.lang.Long getPreOrderSettingsId() {
      return preOrderSettingsId;
    }

    /**
      * Sets the value of the 'preOrderSettingsId' field.
      * @param value The value of 'preOrderSettingsId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder setPreOrderSettingsId(java.lang.Long value) {
      validate(fields()[21], value);
      this.preOrderSettingsId = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'preOrderSettingsId' field has been set.
      * @return True if the 'preOrderSettingsId' field has been set, false otherwise.
      */
    public boolean hasPreOrderSettingsId() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'preOrderSettingsId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.store.avro.Store.Builder clearPreOrderSettingsId() {
      preOrderSettingsId = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Store build() {
      try {
        Store record = new Store();
        record.storeCode = fieldSetFlags()[0] ? this.storeCode : (java.lang.Long) defaultValue(fields()[0]);
        record.idpCode = fieldSetFlags()[1] ? this.idpCode : (java.lang.String) defaultValue(fields()[1]);
        record.storeUniqueId = fieldSetFlags()[2] ? this.storeUniqueId : (java.lang.String) defaultValue(fields()[2]);
        record.status = fieldSetFlags()[3] ? this.status : (java.lang.String) defaultValue(fields()[3]);
        record.image = fieldSetFlags()[4] ? this.image : (java.nio.ByteBuffer) defaultValue(fields()[4]);
        record.name = fieldSetFlags()[5] ? this.name : (java.lang.String) defaultValue(fields()[5]);
        record.imageLink = fieldSetFlags()[6] ? this.imageLink : (java.lang.String) defaultValue(fields()[6]);
        record.totalRating = fieldSetFlags()[7] ? this.totalRating : (java.lang.Double) defaultValue(fields()[7]);
        record.latLon = fieldSetFlags()[8] ? this.latLon : (java.lang.String) defaultValue(fields()[8]);
        record.locationName = fieldSetFlags()[9] ? this.locationName : (java.lang.String) defaultValue(fields()[9]);
        record.cotactNumber = fieldSetFlags()[10] ? this.cotactNumber : (java.lang.Long) defaultValue(fields()[10]);
        record.openingTime = fieldSetFlags()[11] ? this.openingTime : (java.lang.Long) defaultValue(fields()[11]);
        record.zoneId = fieldSetFlags()[12] ? this.zoneId : (java.lang.String) defaultValue(fields()[12]);
        record.email = fieldSetFlags()[13] ? this.email : (java.lang.String) defaultValue(fields()[13]);
        record.closingTime = fieldSetFlags()[14] ? this.closingTime : (java.lang.Long) defaultValue(fields()[14]);
        record.info = fieldSetFlags()[15] ? this.info : (java.lang.String) defaultValue(fields()[15]);
        record.minAmount = fieldSetFlags()[16] ? this.minAmount : (java.lang.Double) defaultValue(fields()[16]);
        record.maxDeliveryTime = fieldSetFlags()[17] ? this.maxDeliveryTime : (java.lang.Long) defaultValue(fields()[17]);
        record.propreitorId = fieldSetFlags()[18] ? this.propreitorId : (java.lang.Long) defaultValue(fields()[18]);
        record.storeAddressId = fieldSetFlags()[19] ? this.storeAddressId : (java.lang.Long) defaultValue(fields()[19]);
        record.storeSettingsId = fieldSetFlags()[20] ? this.storeSettingsId : (java.lang.Long) defaultValue(fields()[20]);
        record.preOrderSettingsId = fieldSetFlags()[21] ? this.preOrderSettingsId : (java.lang.Long) defaultValue(fields()[21]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Store>
    WRITER$ = (org.apache.avro.io.DatumWriter<Store>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Store>
    READER$ = (org.apache.avro.io.DatumReader<Store>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
